<apex:page id="thePage" standardController="Opportunity" extensions="ctlr_OpportunityEdit" action="{!onPageLoad}">

    <apex:stylesheet value="{!URLFOR($Resource.jquery, 'css/ui-lightness/jquery-ui-1.7.3.custom.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/json2.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/debug.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/jquery-1.5.1.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/jquery-ui-1.8.11.custom.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/BlockUI.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery18, 'js/jquery.bgiframe.min.js')}" />

    <style>
        .ui-widget-overlay { 
            background-color: #000; 
            opacity: 0.5;  
        }
        #productsTab { margin-top: 1em; }
        #productsTab li .ui-icon-close { float: left; margin: 0.4em 0.2em 0 0; cursor: pointer; }    
    </style>

    <script type="text/javascript">
        <!--CPL Start-->
        function AddDynamicRow()
        {   
            var mySection = document.getElementById("thePage:theForm:thePageBlock:sectionLoop:1:pageBlockSection");    
            // alert(mySection );  
            for (var h=0; h<mySection.childNodes.length; h++) 
            { 
                if(h==1) // DIV.pbSubsection
                {
                    var pbSec= mySection.childNodes[1];
                    //alert(pbSec);

                    for (var k=0; k<pbSec.childNodes.length; k++) 
                    {
                        if(k==0) // table.detailList
                        {
                            var pbTable = pbSec.childNodes[0];
                            //alert(pbTable);
        
                            for (var m=0; m<pbTable.childNodes.length; m++) 
                            {
                                var pbBody = pbTable.childNodes[0];
                                var pbRows = pbBody.rows;
                                for (var n=0; n<pbRows.length; n++) 
                                {
                                    if(n==1)
                                    {
                                        //alert(pbRows[n]);
                                        cell1 = document.createElement("TD");
                                        //textnode1=document.createTextNode("<label for="thePage:theForm:thePageBlock:sectionLoop:1:pageBlockSection:fieldsLoop:2:compPickList">Competitor</label>");
                                        textnode1=document.createTextNode("Competitor");
                                        cell1.appendChild(textnode1);
                                        cell1.setAttribute("class", "labelCol"); 
                                        pbRows[n].firstChild.setAttribute("colspan","1");
                                        pbRows[n].firstChild.style.cssText+=';padding: 0px 0px 0px 0px;';
                                        pbRows[n].insertBefore(cell1, pbRows[n].firstChild);
                                    }
                                }
                             }
                         }
                     }
                }
            }
        }

        <!--CPL Stop-->


        String.prototype.trim = function(){return (this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, ""))}
        String.prototype.endsWith = function(str) {return (this.match(str+"$")==str)}
        String.prototype.startsWith = function(str) {return (this.match("^"+str)==str)}
        String.prototype.contains = function(str) {return (this.indexOf(str) != -1)}
        String.prototype.left = function(n) {
            if (n <= 0)
                return "";
            else if (n > this.length)
                return str;
            else
                return this.substring(0,n);
        }

        String.prototype.right = function(n) {
            if (n <= 0)
                return "";
            else if (n > this.length)
                return str;
            else {
                var iLen = this.length;
                return this.substring(iLen, iLen - n);
            }
        }

        var lastStageNameValue = "";

        var removedProducts = "";
                
        var loading = true;
        var cmbPractices = null;
        var cmbProduct = null;
        var lastTabURL = "";
        var tabCounter = 0;
        
        var isIE6 = false;
        
        var jsonString;
        
        $(document).ready(function() {
        
        // ---- CPL Start -----------
        //AddDynamicRow();
        // --- CPL End ---------
            isIE6 = navigator.appVersion.indexOf("MSIE 6.0") > -1;
            
            jsonString = document.getElementById('thePage:theForm:thePageBlock:jsonString');        
            document.getElementById('AddServiceDialog').style.display = 'block';
            cmbPractices = document.getElementById('cmbPractices');
            cmbProduct = document.getElementById('cmbProduct');
            
            if (jsonLoadProducts && jsonLoadProducts != null) {
                setTimeout("loadTabs()", 500);
            }
                   
            if (Probability != null) {
                try
                {
                    var div = document.createElement('DIV');
                    div.className = 'blockProbability';
                    
                    
                    Probability.parentNode.appendChild(div);
                    Probability.parentNode.removeChild(Probability);
                    div.appendChild(Probability);
                    
//                  Probability = document.getElementById(Probability.Id);
                }
                catch (e) {}
            }
            lastStageNameValue = StageName.value;
            loading = false;
        });
        
        function loadTabs() {
            loading = true;
            
            for (var i in jsonLoadProducts.Products) {
                var p = jsonLoadProducts.Products[i].Product;
                addExistingService(p.Id, p.PricebookEntryId, p.PricebookEntryName);
            }
            
            $( "#productsTab" ).tabs("select", "#tabs-0");
            
            loading = false;
        }
        
        $(function() {
                var $tabs = $( "#productsTab" ).tabs({
                    ajaxOptions: { async: true },
                    tabTemplate: "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close'>Remove Tab</span></li>",
                    add: function(event, ui) {
                        if (isIE6)                        
                            $( ui.panel ).append('<iframe id="frm-' + ui.panel.id + '" src="' + lastTabURL + '" frameborder="0" height="{!serviceTabsHeight}px" marginwidth="0px" marginheight="0px" scrolling="auto" style="width: 99%;"></iframe>');
                        else
                            $( ui.panel ).append('<iframe id="frm-' + ui.panel.id + '" src="' + lastTabURL + '" frameborder="0" width="100%" height="{!serviceTabsHeight}px" marginwidth="0px" marginheight="0px" scrolling="auto"></iframe>');                                             
                                                                     
                        $( "#productsTab" ).tabs("select", "#" + ui.panel.id);
                    }
                    
                });
                $( "#dialog:ui-dialog" ).dialog( "destroy" );
                $( "#AddServiceDialog" ).dialog(
                    {
                        autoOpen: false,
                        bgiframe: true, 
                        height: {!addServiceDialogHeight},
                        width: {!addServiceDialogWidth},
                        modal: true,
                        resizable: false,
                        draggable: true,
                        overlay: { 
                            backgroundColor: '#000', 
                            opacity: 0.5 
                        } 
                    }   
                 );
                 
                $( "#productsTab span.ui-icon-close" ).live( "click", function() {
                    var answer = confirm('Are you sure you want to remove this service?');
                    if (answer) {
                        var index = $( "li", $tabs ).index( $( this ).parent() );
                        if ("{!opportunity.Id}" != "") {
                            if (removedProducts != "") removedProducts += ";";
                            removedProducts += getFrameElement("frm-tabs-" + index).contentWindow.LineItemId;
                        }
                        $tabs.tabs( "remove", index );
                        
                        if (CurrencyIsoCode != null) CurrencyIsoCode.disabled = $tabs.tabs( "length" ) > 0;
                    }
                });

            }           
        );
        
        function addNewProduct() {
            if (StageName.value == null || StageName.value == "") {
                alert("You must specify a Stage before you can add a service.");
                return false;
            }
            
            resetAddServiceDialog();            

            $( "#dialog:ui-dialog" ).dialog( "destroy" );
            
            $( "#AddServiceDialog" ).dialog(
                {
                        autoOpen: false,
                        bgiframe: true, 
                        height: {!addServiceDialogHeight},
                        width: {!addServiceDialogWidth},
                        modal: true,
                        resizable: false,
                        draggable: true,
                        overlay: { 
                            backgroundColor: '#000', 
                            opacity: 0.5 
                        } 
                }   
            );

            $( '#AddServiceDialog' ).dialog( 'open' );             
            
            return false;
        }
        
        function resetAddServiceDialog() {
            var cmbProduct = document.getElementById('cmbProduct');
            var cmbPractice = document.getElementById('cmbPractice');
            
            cmbPractice.value = '{null}'; 
            cmbProduct.value = '{null}';
            
            //while (cmbProduct.length > 1)
            //  cmbProduct.remove(1); 
            cmbProduct.options.length = 0; 
            cmbProduct.style.width = '25px'; 
        }
        
        function closeAddServiceDialog() {
            $( '#AddServiceDialog' ).dialog( 'close' );
        }
        
        function addService(closeOnSuccess) {
            cmbProduct = document.getElementById('cmbProduct');
            
            if (cmbProduct.value == null || cmbProduct.value == "" || cmbProduct.value == "{null}") {
                alert("Select a valid service to add!");
                return;
            }
            
            lastTabURL = "/apex/OpportunityProductEdit?peId=" + cmbProduct.value + "&pbId={!opportunity.Pricebook2Id}&RecordType={!opportunity.RecordTypeId}&stage=" + StageName.value; 
            var tab = $( "#productsTab" ).tabs("add", "#tabs-" + tabCounter, getComboTextValue(cmbProduct));
            tabCounter++;

            if (CurrencyIsoCode != null) CurrencyIsoCode.disabled = true;
            
            closeAddServiceDialog();
            
            if (!closeOnSuccess) {
                 resetAddServiceDialog();
                 addNewProduct();
            }
            
        }
                
        function addExistingService(id, peId, peName) {
            lastTabURL = "/apex/OpportunityProductEdit?Id=" + id + "&peId=" + peId + "&pbId={!opportunity.Pricebook2Id}&RecordType={!opportunity.RecordTypeId}&stage=" + StageName.value + "{!productIFrameURL}"; 
            var tab = $( "#productsTab" ).tabs("add", "#tabs-" + tabCounter, peName);
            tabCounter++;
        }
        
        function getComboTextValue(cmb) {
            for (var i = 0; i < cmb.childNodes.length; i++) {
                if (cmb.childNodes[i].selected) return cmb.childNodes[i].text;
            }
            
            return "";
        }
        
        function fieldOnBlur(e) {
            if (window.event)
                e = window.event;
            //else
            //    e = Event;
            //interrogate(e.srcElement);
            //interrogateValues(e.srcElement);
        }

        function fieldOnChange(e) {
        //alert(lastStageNameValue);
        //alert("StageName");
            var target;
            if (window.event) {
                e = window.event;
                target = e.srcElement;
            }
            else {
                target = e.target;
                while (target.nodeType != target.ELEMENT_NODE)
                    target = target.parentNode;
            }
            if (target == StageName && StageName.value != lastStageNameValue) {
                lastStageNameValue = StageName.value;
                $('div.blockProbability').block({ bgiframe: true, message: '<h1>Loading...</h1>', css: { border: '3px solid #a00' } }); 
                js_getProbabilityDefault(StageName.value);
                return false;
            }
        }
        
        function fieldOnKeyUp(e) {
            if (window.event) return;

            target = e.target;
            while (target.nodeType != target.ELEMENT_NODE)
                target = target.parentNode;
            
            if (target == StageName && StageName.value != lastStageNameValue) {
                lastStageNameValue = StageName.value;
                $('div.blockProbability').block({ bgiframe: true, message: '<h1>Loading...</h1>', css: { border: '3px solid #a00' } }); 
                js_getProbabilityDefault(StageName.value);
                return false;
            }
        }
        
        function saveOpportunity(e) {
            
            //alert(getJSON()); 
            //var json = JSON.parse(getJSON());
            //interrogate(json.Opportunity.Products);
            //interrogate(json.Opportunity.Products.Product);
            
            
            
            $('div.blockMe').block({ bgiframe: true, message: '<h1>Saving...</h1>', css: { border: '3px solid #a00' } });
            
            saveAll(getJSON(), removedProducts);

            return false;
        }

        function getFrame(frameId) {
            try {
                eval("var theFrame = window.frames." + frameId + ";");
        
                if (theFrame != null)
                    return theFrame;
                else {
                    for (var v = 0; v < window.frames.length; v++) {
                        if (window.frames[v].name == frameId) return window.frames[v];
                    }
                }
            }
            catch (e) {
                //this.showException("getFrame", e);
                alert(e.message);
                return null;
            }
        }
        
        function getFrameElement(frameId)
        {
            try
            {
                var frames = document.getElementsByTagName("iframe");
                for (var i=0; i<frames.length; i++)
                {
                    if (frames[i].id == frameId)
                        return frames[i];
                }
                
                return null;
            }
            catch (e) { 
                alert(e.message); 
            }
        }

        function getProductTabFrames() {        
              if (document.getElementsByClassName) {
                return document.getElementsByClassName('ui-tabs-panel');
            } else {
              tabFrames = new Array();
              index = 0;
              i = 0;
              a = document.getElementsByTagName("div");
              while (element = a[i++]) {
                if (element.className.startsWith("ui-tabs-panel")) {
                    tabFrames[index++] = element;
                }
              }
             return tabFrames;
            }
            
            return null;
        }

        function getProductsJSON() {
            var json = "";

            var tabFrames = getProductTabFrames();
            if (tabFrames.length > 0) {
                json += ", \"Products\": [ ";
                for (var i = 0; i < tabFrames.length; i++) {
                    frm = tabFrames[i];
                    
                    //interrogate(getFrameElement("frm-tabs-" + t));
                    if (i > 0) json += ", ";
                    json += getFrameElement('frm-' + frm.id).contentWindow.getJSON();
                }
                json += " ]";
            }
            return json;
        }
        
        function setTabColor(tabId, tabColor) {
            elements = document.getElementsByTagName("a");
            i=0;
            while (element = elements[i++]) {
                //alert(element.href);
                if (element.href.endsWith("#" + tabId)) {
                    if (tabColor == null || tabColor == "") {
                        element.style.color = "";
                        element.style.backgroundColor = "";
                        element.parentNode.style.backgroundColor = "";
                    }
                    else {
                        element.style.color = "white";
                        element.style.backgroundColor = tabColor;
                        element.parentNode.style.backgroundColor = tabColor;
                    }
                    return;
                }
            }
        }
        
        function getCurrencyIsoCode() {
            if (CurrencyIsoCode.id.endsWith(':ROF'))
                return CurrencyIsoCode.childNodes[0].data;
            else
                return CurrencyIsoCode.value;
        }
        
        function getFieldValue(f) {
            
            if (f == null || f.id == null) {
                //alert("returning null")
                return null;
            }
            
            if (f.id.endsWith(':ROF')) {
                //interrogateValues(f);
                if (f.nodeName == "SPAN") {
                    // Readonly Field, in a span with a text node
                    if (f.childNodes.length > 0)
                        return f.childNodes[0].data;
                    else
                        return null;
                }
                alert("unhandled read-only field.  nodeName = '" + f.nodeName + "'");
                return f.value;
            }
            
            // this is a fix to prevent every checkbox from returnign back true.  for some reason the value
            // on a checkbox is always 1
            if (f.type == "checkbox") {
                if (!f.checked) {
                    f.value = 0;
                }
            }
            //alert("type: " + f.type + "; id: " + f.id + "; value: " + f.value);
            //alert("id: " + f.id);
            //alert("value: " + f.value);
            
             if (f.type == "select-multiple") {
                var valueList = "";
                var elm = document.getElementById(f.id + "_selected");
                for (var i=0; i<elm.length; i++) {
                    if (i > 0) valueList += ";";
                    valueList += elm.options[i].text;
                }
                
                return valueList;
            }
            
            if ((f.value != null) && (f.value != "")) {
                var elm = document.getElementById(f.id + "_lkid");
                if (elm != null) {
                    //alert("returning " + elm.value);
                    return elm.value;
                }
            }
            //Case 66693. Chintan, April 09, 2013
            if (f.type == "textarea" || f.type=="text") {
                f.value = f.value.replace(/\"/g, '_QUOTE_');
                //alert("returning " + f.value);
            }
            //End change Case 66693
            
            //alert("returning " + f.value);
            return f.value;
        }
        
        {!getJSONScript}
        
        
        
            </script>

    <apex:form id="theForm"> 
        <apex:actionFunction name="js_getProbabilityDefault" action="{!getProbabilityDefault}" rerender="defaultProbabilityScript" immediate="true">
            <apex:param name="gpStageName" assignTo="{!gpStageName}" value="" />
        </apex:actionFunction>

        <apex:actionFunction name="saveAll" action="{!saveAll}" rerender="oppDisplay,pageMessages">
            <apex:param name="jsonString" assignTo="{!jsonString}" value="" />
            <apex:param name="removedProducts" assignTo="{!removedProducts}" value="" />
        </apex:actionFunction>

        <apex:actionFunction name="js_getProductsByPractice" action="{!getProductsByPractice}" rerender="thePage:theForm:pnlProductList" immediate="true">
            <apex:param name="practice" assignTo="{!practice}" value="" />
            <apex:param name="currencyISO" assignTo="{!currencyIsoCode}" value="" />
        </apex:actionFunction>

        <div class="blockMe">
            <apex:pageBlock id="thePageBlock" title="Opportunity" mode="view">
            
                <apex:pageMessages id="pageMessages"/>
    
                <apex:pageBlockButtons >
                    <apex:commandButton onclick="return saveOpportunity();" value="Save" />
                    <apex:commandButton action="{!cancel}" value="Cancel" />
                    <apex:commandButton onclick="return addNewProduct();"
                        value="Add New Service" />
                </apex:pageBlockButtons>
    
    
                <apex:outputPanel id="oppDisplay" layout="block">
    
                    <apex:repeat value="{!editSections}" var="section" id="sectionLoop">
                        <apex:pageBlockSection id="pageBlockSection"
                            title="{!section.Name}" collapsible="{!section.Collapsible__c}"
                            columns="{!section.Columns__c}" >
                            <apex:repeat value="{!section.Opportunity_Edit_Fields__r}" var="field" id="fieldsLoop" >

                                <!--CPL Start-->
                                <c:MultiSelectPickList label="" id="compPickList" AvailableList="{!availableList}" ChosenList="{!chosenList}" rendered="{!field.Field_Name__c == 'Competitor__c'}"/>
                                <!--CPL Stop-->
                                <apex:inputField id="EF"
                                    value="{!opportunity[field.Field_Name__c]}"
                                    onblur="if (fieldOnBlur) fieldOnBlur(event);" onchange="if (fieldOnChange) fieldOnChange(event);"
                                    onkeyup="if (fieldOnKeyUp) fieldOnKeyUp(event);"
                                    rendered="{!OR(AND(field.Field_Name__c != 'Competitor__c',field.Field_Name__c != 'Description',field.Field_Name__c != 'CurrencyIsoCode'), AND(field.Field_Name__c == 'CurrencyIsoCode', opportunity.Id == null))}" />
                                <apex:inputField id="NEF"
                                    value="{!opportunity[field.Field_Name__c]}" style="width:90%"
                                    onblur="if (fieldOnBlur) fieldOnBlur(event);" onchange="if (fieldOnChange) fieldOnChange(event);"
                                    onkeyup="if (fieldOnKeyUp) fieldOnKeyUp(event);"
                                    rendered="{!field.Field_Name__c == 'Description'}"/>  
                                <apex:outputField id="ROF"
                                    value="{!opportunity[field.Field_Name__c]}"
                                    rendered="{!OR(field.Field_Name__c == 'Pricebook2Id', AND(field.Field_Name__c == 'CurrencyIsoCode', opportunity.Id != null))}" />
                                
                            </apex:repeat>
                        </apex:pageBlockSection>
                    </apex:repeat>
            
                    <!--CPL Start-->
                    <script>AddDynamicRow();</script>
                    <!--CPL Stop-->

                    <script type="text/javascript">var fieldLoopCounter = 0; var sectionLoopCounter = 0;</script>
    
                    <apex:repeat value="{!editSections}" var="section" id="sectionLoop2">
                        <apex:repeat value="{!section.Opportunity_Edit_Fields__r}"
                            var="field" id="fieldsLoop2">
                            
                            <apex:outputPanel rendered="{!OR(AND(field.Field_Name__c != 'Pricebook2Id', field.Field_Name__c != 'Description' , field.Field_Name__c != 'CurrencyIsoCode'), AND(field.Field_Name__c == 'CurrencyIsoCode', opportunity.Id == null))}">
                                <script type="text/javascript">
                                    var {!field.Field_Name__c} = document.getElementById("thePage:theForm:thePageBlock:sectionLoop:" + sectionLoopCounter + ":pageBlockSection:fieldsLoop:" + fieldLoopCounter + ":EF");                        
                                    fieldLoopCounter++;
                                </script>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!(field.Field_Name__c == 'Description')}">
                                <script type="text/javascript">
                                    var {!field.Field_Name__c} = document.getElementById("thePage:theForm:thePageBlock:sectionLoop:" + sectionLoopCounter + ":pageBlockSection:fieldsLoop:" + fieldLoopCounter + ":NEF");                        
                                    fieldLoopCounter++;
                                </script>
                            </apex:outputPanel>
                            <apex:outputPanel rendered="{!OR(field.Field_Name__c == 'Pricebook2Id', AND(field.Field_Name__c == 'CurrencyIsoCode', opportunity.Id != null))}">
                                <script type="text/javascript">
                                    var {!field.Field_Name__c} = document.getElementById("thePage:theForm:thePageBlock:sectionLoop:" + sectionLoopCounter + ":pageBlockSection:fieldsLoop:" + fieldLoopCounter + ":ROF");                       
                                    fieldLoopCounter++;
                                </script>
                            </apex:outputPanel>
                        </apex:repeat>
                        <script type="text/javascript">
                            fieldLoopCounter = 0;
                            sectionLoopCounter++;
                        </script>
                    </apex:repeat>
    
                    <apex:outputPanel id="productResultsPanel"
                        rendered="{!HasProductResults}">
                        <script type="text/javascript"> 
                        //alert('{!jsonProductResults}');
                        var jsonResults = {!jsonProductResults};
                        //interrogateValues(jsonResults.Products);
                        
                        // Loop through the tabs and match them up and call setResults()
                        var tabFrames = getProductTabFrames();
                        if (tabFrames.length > 0) {
                            for (var t = 0; t < tabFrames.length; t++) {
                                frm = getFrameElement('frm-' + tabFrames[t].id).contentWindow;
                                
                                for (var i in jsonResults.Products) {
                                    var p = jsonResults.Products[i].Product;
                                    if (frm.PricebookEntryId == p.PricebookEntryId) {
                                        if (p.isSuccess == 'true') {
                                            setTabColor("tabs-" + t, null);
                                            try {
                                                frm.showErrors(null);
                                            }
                                            catch (e) {
                                                alert(e.message);
                                            }
                                        }
                                        else
                                        {
                                            setTabColor("tabs-" + t, "#FF0000");
                                            try {
                                                frm.showErrors(JSON.stringify(p));
                                            }
                                            catch (e) {
                                                alert(e.message);
                                            }
                                        }
                                        continue;
                                    }
                                    
                                }
                                
                            }
                        }
                                                 
                    </script>
                    </apex:outputPanel>
                    <apex:outputPanel id="clearSaveBlock">
                        <script type="text/javascript">
                            setTimeout("$('div.blockMe').unblock();", 1000);
                        </script>
                    </apex:outputPanel> 
                </apex:outputPanel>
    
                <apex:pageBlockSection title="Product Information" collapsible="true"
                    columns="1">
    
                    <div id="productsTab">
    
                        <ul>
                        </ul>
    
                    </div>
    
                </apex:pageBlockSection>
    
    
            </apex:pageBlock>
        </div>
        
        <apex:outputPanel id="defaultProbabilityScript">
        <script type="text/javascript">
            if ({!hasProbabilityDefault} && Probability != null) {
                Probability.value = "{!defaultProbability}";
            }
            try {
                $('div.blockProbability').unblock();
            } catch (e) {}
        </script>
        </apex:outputPanel>
        
        <div id="AddServiceDialog" title="Add Service" style="display: none;">
            <table border="0">
                <tr>
                    <td>Price Book</td>
                    <td><apex:outputField value="{!opportunity.Pricebook2Id}" />
                    </td>
                </tr>
                <tr>
                    <td>Select Practice:</td>
                    <td><select id="cmbPractice"
                        onchange="if (!loading) {$('div.blockcmbProduct').block({ bgiframe: true, message: '<h1>Loading...</h1>', css: { border: '3px solid #a00' } }); js_getProductsByPractice(document.getElementById('cmbPractice').value, getCurrencyIsoCode());};">
                            <option value="{null}"></option>
                            <apex:repeat value="{!practices}" var="thePractice"
                                id="practicesLoop">
                                <!-- <option value="{!thePractice.Name}">{!thePractice.Name}</option>  -->
                                <option value="{!thePractice}">{!thePractice}</option>
                            </apex:repeat>
                    </select></td>
                </tr>
                <tr>
                    <td>Select Service:</td>
                    <td><div class="blockcmbProduct"><apex:outputPanel id="pnlProductList">
                    
                            <select id="cmbProduct">
                                <option value="{null}"></option>
                                <!-- <option value="{!product.Product2.Id}">{!product.Product2.Name}</option> -->
                                <apex:repeat value="{!availableProducts}" var="product"
                                    id="productLoop">
                                    <option value="{!product.Id}">{!product.Name}</option>
                                </apex:repeat>
                            </select>
                            <script type="text/javascript">$('div.blockcmbProduct').unblock();</script>
                        </apex:outputPanel></div></td>
                </tr>
            </table>
            <br />
            <div id="AddServiceButtons"
                style="text-align: right; width: 95%; overflow: hidden;">
                <input type="button" value="Add Service & Close"
                    onclick="addService(true); return false;" class="button" /> <input
                    type="button" value="Add Service & New"
                    onclick="addService(false); resetAddServiceDialog(); return false;"
                    class="button" /> <input type="button" value="Close"
                    onclick="closeAddServiceDialog(); return false;" class="button" />
            </div>
        </div>
        <script type="text/javascript">
            if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {
            $(document).ready(function($){
                $('table td').css('float', 'left') ;
                $('table td').css('clear', 'both') ;
                $('table th').css('float', 'left') ;
                $('table th').css('clear', 'both') ;
            });
        }
        </script>
    </apex:form>
</apex:page>